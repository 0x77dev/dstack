name: Relay

on:
  schedule:
    - cron: '34 19 * * *'
  push:
    branches: [main]
    tags: ['v*.*.*']
    paths:
      - '.github/workflows/relay.yaml'
      - 'packages/relay/**'
      - 'yarn.lock'
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/relay

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'

      - name: Install nx
        run: yarn global add nx

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@b4f55743d10d066fee1de1cf0fa26069700c0195
        with:
          cosign-release: 'v1.4.0'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@766152f6a9556ec9ed74638570ee3e659ceae57c

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@f6d32ad0236599ffe0bb261e71184c3e4e1d47cd
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@47c365107cb34e788d99cf3d89acf424b505b3e8
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build relay
        id: nx-build-relay
        run: yarn install && nx build relay

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: dist/packages/relay
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: 'true'
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}

      - uses: superfly/flyctl-actions@1.3
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        with:
          args: 'deploy'
