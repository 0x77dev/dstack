[{"/Users/0x77/Documents/dstack-js/dstack/packages/ipfs/src/addresses.ts":"1","/Users/0x77/Documents/dstack-js/dstack/packages/ipfs/src/index.ts":"2"},{"size":92,"mtime":1643644007802,"results":"3","hashOfConfig":"4"},{"size":1267,"mtime":1643644410036,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8wj70j",{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/0x77/Documents/dstack-js/dstack/packages/ipfs/src/addresses.ts",[],"/Users/0x77/Documents/dstack-js/dstack/packages/ipfs/src/index.ts",["10"],{"ruleId":"11","severity":1,"message":"12","line":12,"column":50,"nodeType":"13","messageId":"14","endLine":12,"endColumn":53,"suggestions":"15"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["16","17"],{"messageId":"18","fix":"19","desc":"20"},{"messageId":"21","fix":"22","desc":"23"},"suggestUnknown",{"range":"24","text":"25"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"24","text":"26"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[405,408],"unknown","never"]